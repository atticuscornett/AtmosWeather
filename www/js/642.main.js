"use strict";(self.webpackChunkcap=self.webpackChunkcap||[]).push([[642],{642:(e,a,n)=>{n.r(a),n.d(a,{Geolocation:()=>o,GeolocationWeb:()=>i});var t=n(895);class i extends t.Uw{async getCurrentPosition(e){return new Promise(((a,n)=>{navigator.geolocation.getCurrentPosition((e=>{a(e)}),(e=>{n(e)}),Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},e))}))}async watchPosition(e,a){return`${navigator.geolocation.watchPosition((e=>{a(e)}),(e=>{a(null,e)}),Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},e))}`}async clearWatch(e){window.navigator.geolocation.clearWatch(parseInt(e.id,10))}async checkPermissions(){if("undefined"==typeof navigator||!navigator.permissions)throw this.unavailable("Permissions API not available in this browser");const e=await window.navigator.permissions.query({name:"geolocation"});return{location:e.state,coarseLocation:e.state}}async requestPermissions(){throw this.unimplemented("Not implemented on web.")}}const o=new i}}]);